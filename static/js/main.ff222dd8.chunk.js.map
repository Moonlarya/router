{"version":3,"sources":["me.jpg","components/Navigation.js","pages/Home/Home.js","pages/Contacts/Contacts.js","pages/Photos/Photos.js","components/Post/Post.js","pages/Posts/Posts.js","Router/Router.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","to","Home","className","src","me","alt","Component","Contacts","Photos","Post","author","photo","name","nickname","date","content","image","Posts","RouteSchema","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,gC,2NC0B5BC,G,MAtBI,SAACC,GAClB,OACE,gCACE,6BACE,4BACE,kBAAC,IAAD,CAAMC,GAAI,KAAV,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,UAAV,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,WAAV,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,aAAV,cAGJ,kBAAC,IAAUD,M,qDCqBFE,E,uKApCX,OACE,6BACE,wBAAIC,UAAU,SAAd,gHACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,UACb,2BACE,4EAEF,6bAEoB,8EAFpB,4JAKA,2BACE,+IAEF,oPAEE,uDAFF,oJAIA,oOACyC,IACvC,kJAFF,sOAMF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,YACf,yBAAKC,IAAKC,IAAIF,UAAU,KAAKG,IAAI,c,GA9B1BC,aCIJC,E,uKAJX,OAAO,6C,GAFYD,aCMRE,E,uKAJX,OAAO,2C,GAFUF,aCuBNG,G,MAtBF,SAACV,GACZ,OACE,yBAAKG,UAAU,WACb,4BAAQA,UAAU,QAChB,yBAAKA,UAAU,SACb,yBAAKC,IAAKJ,EAAMW,OAAOC,SAEzB,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,UAAUH,EAAMW,OAAOE,MACrC,0BAAMV,UAAU,OAAOH,EAAMW,OAAOG,UACpC,0BAAMX,UAAU,OAAhB,UACA,0BAAMA,UAAU,OAAOH,EAAMe,OAE/B,uBAAGZ,UAAU,WAAWH,EAAMgB,SAC9B,yBAAKb,UAAU,aAAaC,IAAKJ,EAAMiB,aCOlCC,E,uKAfX,OACE,kBAAC,EAAD,CACEP,OAAQ,CACNE,KAAM,mBACND,MAVR,6FAWQE,SAAU,eAEZE,QAAQ,kDACRC,MAZN,gGAaMF,KAAM,qC,GAXMR,aCWLY,EAbK,kBAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACtC,kBAAC,EAAD,CAAYkB,OAAK,EAACC,KAAK,SAASC,UAAWJ,IAC3C,kBAAC,EAAD,CAAYE,OAAK,EAACC,KAAK,UAAUC,UAAWb,IAC5C,kBAAC,EAAD,CAAYW,OAAK,EAACC,KAAK,YAAYC,UAAWd,IAE9C,kBAAC,IAAD,CAAOY,OAAK,EAACE,UAAW,kBAAM,wBAAInB,UAAU,eAAd,eCFhBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACC,EAAD,MAAYC,SAASC,eAAe,SD6H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ff222dd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.7ce63541.jpg\";","import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport \"./Navigation.scss\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <li>\r\n          <Link to={\"/\"}>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={\"/posts\"}>Posts</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={\"/photos\"}>Photos</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={\"/contacts\"}>Contacts</Link>\r\n        </li>\r\n      </nav>\r\n      <Route {...props} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.scss\";\r\nimport me from \"../../me.jpg\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"quote\">Де є любов, там є життя</h1>\r\n        <div className=\"two_sides_block\">\r\n          <div className=\"letter\">\r\n            <p>\r\n              <strong>Привіт C:</strong>\r\n            </p>\r\n            <p>\r\n              Людинко, якщо ти читаєш цей текст, це означає що ти натрапила (або\r\n              натрапив) на дещо <strong>важливе</strong>, чим я хочу поділитись\r\n              з тобою.\r\n            </p>\r\n            <p>\r\n              <strong>Це не просто домашка.</strong>\r\n            </p>\r\n            <p>\r\n              Скоріш за все, ти знаєш мене як студентку CURSOR.\r\n              <strong> Але</strong> це лише одна сторона медалі.\r\n            </p>\r\n            <p>\r\n              Сьогодні я хочу показати тобі як можна{\" \"}\r\n              <strong>обіймати на відстані</strong>. Я хочу познайомити тебе зі\r\n              своєю творчістю.\r\n            </p>\r\n          </div>\r\n          <div className=\"imageWrapper\">\r\n            <div className=\"overlay\"></div>\r\n            <img src={me} className=\"me\" alt=\"me\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return <div>Contacts</div>;\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Photos extends Component {\r\n  render() {\r\n    return <div>Photos</div>;\r\n  }\r\n}\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport \"./Post.scss\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <header className=\"post\">\r\n        <div className=\"photo\">\r\n          <img src={props.author.photo}></img>\r\n        </div>\r\n        <div className=\"post_container\">\r\n          <div className=\"headLine\">\r\n            <h1 className=\"author\">{props.author.name}</h1>\r\n            <span className=\"sub\">{props.author.nickname}</span>\r\n            <span className=\"sub\">•</span>\r\n            <span className=\"sub\">{props.date}</span>\r\n          </div>\r\n          <p className=\"content\">{props.content}</p>\r\n          <img className=\"post_image\" src={props.image}></img>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"../../components/Post/Post\";\r\n\r\nconst ANAKIN_IMAGE =\r\n  \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\";\r\nconst RAY_IMAGE =\r\n  \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\";\r\n\r\nclass Posts extends Component {\r\n  render() {\r\n    return (\r\n      <Post\r\n        author={{\r\n          name: \"Anakin Skywalker\",\r\n          photo: ANAKIN_IMAGE,\r\n          nickname: \"@dart_vader\",\r\n        }}\r\n        content=\"WTF? Who is Ray? Why she is Skywalker? Luke...?\"\r\n        image={RAY_IMAGE}\r\n        date={\"26 февр.\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nimport { Home, Contacts, Posts, Photos } from \"../pages\";\r\n\r\nconst RouteSchema = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Navigation exact path=\"/\" component={Home} />\r\n      <Navigation exact path=\"/posts\" component={Posts} />\r\n      <Navigation exact path=\"/photos\" component={Photos} />\r\n      <Navigation exact path=\"/contacts\" component={Contacts} />\r\n\r\n      <Route exact component={() => <h1 className=\"text-center\"> 404 </h1>} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default RouteSchema;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Router from \"./Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}